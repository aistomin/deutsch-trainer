/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.routines;


import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.codegen.maven.example.Public;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * @deprecated Unknown data type. Please define an explicit {@link
 * org.jooq.Binding} to specify how this type should be handled. Deprecation can
 * be turned off using {@literal <deprecationOnUnknownTypes/>} in your code
 * generator configuration.
 */
@Deprecated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StVoronoilines extends AbstractRoutine<Object> {

    private static final long serialVersionUID = 1L;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public static final Parameter<Object> G1 = Internal.createParameter("g1", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * The parameter <code>public.st_voronoilines.tolerance</code>.
     */
    public static final Parameter<Double> TOLERANCE = Internal.createParameter("tolerance", SQLDataType.DOUBLE.defaultValue(DSL.field("0.0", SQLDataType.DOUBLE)), true, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public static final Parameter<Object> EXTEND_TO = Internal.createParameter("extend_to", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\"").defaultValue(DSL.field("NULL::geometry", SQLDataType.OTHER)), true, false);

    /**
     * Create a new routine call instance
     */
    public StVoronoilines() {
        super("st_voronoilines", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(G1);
        addInParameter(TOLERANCE);
        addInParameter(EXTEND_TO);
    }

    /**
     * Set the <code>g1</code> parameter IN value to the routine
     */
    public void setG1(Object value) {
        setValue(G1, value);
    }

    /**
     * Set the <code>g1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setG1(Field<Object> field) {
        setField(G1, field);
    }

    /**
     * Set the <code>tolerance</code> parameter IN value to the routine
     */
    public void setTolerance(Double value) {
        setValue(TOLERANCE, value);
    }

    /**
     * Set the <code>tolerance</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setTolerance(Field<Double> field) {
        setField(TOLERANCE, field);
    }

    /**
     * Set the <code>extend_to</code> parameter IN value to the routine
     */
    public void setExtendTo(Object value) {
        setValue(EXTEND_TO, value);
    }

    /**
     * Set the <code>extend_to</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setExtendTo(Field<Object> field) {
        setField(EXTEND_TO, field);
    }
}
