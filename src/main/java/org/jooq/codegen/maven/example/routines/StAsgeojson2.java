/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.routines;


import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.Record;
import org.jooq.codegen.maven.example.Public;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StAsgeojson2 extends AbstractRoutine<String> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.st_asgeojson.RETURN_VALUE</code>.
     */
    public static final Parameter<String> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.st_asgeojson.r</code>.
     */
    public static final Parameter<Record> R = Internal.createParameter("r", SQLDataType.RECORD, false, false);

    /**
     * The parameter <code>public.st_asgeojson.geom_column</code>.
     */
    public static final Parameter<String> GEOM_COLUMN = Internal.createParameter("geom_column", SQLDataType.CLOB.defaultValue(DSL.field("''::text", SQLDataType.CLOB)), true, false);

    /**
     * The parameter <code>public.st_asgeojson.maxdecimaldigits</code>.
     */
    public static final Parameter<Integer> MAXDECIMALDIGITS = Internal.createParameter("maxdecimaldigits", SQLDataType.INTEGER.defaultValue(DSL.field("9", SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public.st_asgeojson.pretty_bool</code>.
     */
    public static final Parameter<Boolean> PRETTY_BOOL = Internal.createParameter("pretty_bool", SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public StAsgeojson2() {
        super("st_asgeojson", Public.PUBLIC, SQLDataType.CLOB);

        setReturnParameter(RETURN_VALUE);
        addInParameter(R);
        addInParameter(GEOM_COLUMN);
        addInParameter(MAXDECIMALDIGITS);
        addInParameter(PRETTY_BOOL);
        setOverloaded(true);
    }

    /**
     * Set the <code>r</code> parameter IN value to the routine
     */
    public void setR(Record value) {
        setValue(R, value);
    }

    /**
     * Set the <code>r</code> parameter to the function to be used with a {@link
     * org.jooq.Select} statement
     */
    public void setR(Field<Record> field) {
        setField(R, field);
    }

    /**
     * Set the <code>geom_column</code> parameter IN value to the routine
     */
    public void setGeomColumn(String value) {
        setValue(GEOM_COLUMN, value);
    }

    /**
     * Set the <code>geom_column</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public void setGeomColumn(Field<String> field) {
        setField(GEOM_COLUMN, field);
    }

    /**
     * Set the <code>maxdecimaldigits</code> parameter IN value to the routine
     */
    public void setMaxdecimaldigits(Integer value) {
        setValue(MAXDECIMALDIGITS, value);
    }

    /**
     * Set the <code>maxdecimaldigits</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    public void setMaxdecimaldigits(Field<Integer> field) {
        setField(MAXDECIMALDIGITS, field);
    }

    /**
     * Set the <code>pretty_bool</code> parameter IN value to the routine
     */
    public void setPrettyBool(Boolean value) {
        setValue(PRETTY_BOOL, value);
    }

    /**
     * Set the <code>pretty_bool</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public void setPrettyBool(Field<Boolean> field) {
        setField(PRETTY_BOOL, field);
    }
}
