/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.routines;


import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.codegen.maven.example.Public;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * @deprecated Unknown data type. Please define an explicit {@link
 * org.jooq.Binding} to specify how this type should be handled. Deprecation can
 * be turned off using {@literal <deprecationOnUnknownTypes/>} in your code
 * generator configuration.
 */
@Deprecated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StQuantizecoordinates extends AbstractRoutine<Object> {

    private static final long serialVersionUID = 1L;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public static final Parameter<Object> G = Internal.createParameter("g", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * The parameter <code>public.st_quantizecoordinates.prec_x</code>.
     */
    public static final Parameter<Integer> PREC_X = Internal.createParameter("prec_x", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_quantizecoordinates.prec_y</code>.
     */
    public static final Parameter<Integer> PREC_Y = Internal.createParameter("prec_y", SQLDataType.INTEGER.defaultValue(DSL.field("NULL::integer", SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public.st_quantizecoordinates.prec_z</code>.
     */
    public static final Parameter<Integer> PREC_Z = Internal.createParameter("prec_z", SQLDataType.INTEGER.defaultValue(DSL.field("NULL::integer", SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public.st_quantizecoordinates.prec_m</code>.
     */
    public static final Parameter<Integer> PREC_M = Internal.createParameter("prec_m", SQLDataType.INTEGER.defaultValue(DSL.field("NULL::integer", SQLDataType.INTEGER)), true, false);

    /**
     * Create a new routine call instance
     */
    public StQuantizecoordinates() {
        super("st_quantizecoordinates", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(G);
        addInParameter(PREC_X);
        addInParameter(PREC_Y);
        addInParameter(PREC_Z);
        addInParameter(PREC_M);
    }

    /**
     * Set the <code>g</code> parameter IN value to the routine
     */
    public void setG(Object value) {
        setValue(G, value);
    }

    /**
     * Set the <code>g</code> parameter to the function to be used with a {@link
     * org.jooq.Select} statement
     */
    public void setG(Field<Object> field) {
        setField(G, field);
    }

    /**
     * Set the <code>prec_x</code> parameter IN value to the routine
     */
    public void setPrecX(Integer value) {
        setValue(PREC_X, value);
    }

    /**
     * Set the <code>prec_x</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setPrecX(Field<Integer> field) {
        setField(PREC_X, field);
    }

    /**
     * Set the <code>prec_y</code> parameter IN value to the routine
     */
    public void setPrecY(Integer value) {
        setValue(PREC_Y, value);
    }

    /**
     * Set the <code>prec_y</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setPrecY(Field<Integer> field) {
        setField(PREC_Y, field);
    }

    /**
     * Set the <code>prec_z</code> parameter IN value to the routine
     */
    public void setPrecZ(Integer value) {
        setValue(PREC_Z, value);
    }

    /**
     * Set the <code>prec_z</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setPrecZ(Field<Integer> field) {
        setField(PREC_Z, field);
    }

    /**
     * Set the <code>prec_m</code> parameter IN value to the routine
     */
    public void setPrecM(Integer value) {
        setValue(PREC_M, value);
    }

    /**
     * Set the <code>prec_m</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setPrecM(Field<Integer> field) {
        setField(PREC_M, field);
    }
}
